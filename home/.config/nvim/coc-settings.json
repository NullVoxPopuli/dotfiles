// # vi:foldmethod=marker
// edit this file by doing :CocConfig after coc.nvim is installed
{
  // A E S T H E T I C
  "diagnostic.errorSign": "✘",
  "diagnostic.warningSign": "⚠",
  "diagnostic.infoSign": "ⓘ",
  "diagnostic.maxWindowHeight": 16,
  "diagnostic.maxWindowWidth": 100,

  // code lens
  "codeLens.enable": false,
  "els.codeLens.relatedFiles": true,

  // Sources for intellisense {{{
  // worthless sources when language-server is present
  "coc.source.buffer.enable": false,
  "coc.source.file.enable": false,
  "coc.source.around.enable": false,
  // }}}

  // coc-tsserver config
  "tsserver.implicitProjectConfig.experimentalDecorators": true,
  "tsserver.maxTsServerMemory": 8196,
  "tsserver.enableJavascript": true,

  // coc-tailwindcss {{{
  "tailwindCSS.headwind.runOnSave": false,
  "tailwindCSS.htmlLanguages": [
    "handlebars",
    "html",
    "markdown"
  ],
  // }}}

  // Linting {{{
  "eslint.quiet": true,
  "eslint.packageManager": "yarn",
  "eslint.filetypes": ["javascript", "json", "typescript"],
  "eslint.autoFix": true,
  "eslint.format.enable": true,
  // Not technically linting... shhhh
  "prettier.eslintIntegration": true,

  // Linting (CSS) -- handled by coc-stylelintplus
  "css.validate": false,
  "scss.validate": false,
  // }}}

  // Git {{{
  // Git - integration with vim-gitgutter
  "git.addedSign.hlGroup": "GitGutterAdd",
  "git.changedSign.hlGroup": "GitGutterChange",
  "git.removedSign.hlGroup": "GitGutterDelete",
  "git.topRemovedSign.hlGroup": "GitGutterDelete",
  "git.changeRemovedSign.hlGroup": "GitGutterChangeDelete",
  // }}}

  // Spelling {{{
  "cSpell.userWords": [
    "Cacheable",
    "Changset",
    "Containery",
    "ENTRYPOINT",
    "JSQR",
    "Klass",
    "Statechart",
    "Styleguide",
    "backoff",
    "changeset's",
    "crowdstrike",
    "defrag",
    "docfy",
    "esbuild",
    "execa",
    "focusable",
    "focusables",
    "hljs",
    "htmlbars",
    "investigatables",
    "metas",
    "mktemp",
    "nullvoxpopuli",
    "outdir",
    "overwatch",
    "proxied",
    "qunit",
    "reactivitiy",
    "rehype",
    "sidenav",
    "statecharts",
    "tabbable",
    "triggerable",
    "untabbable",
    "xstate"
  ],
  // }}}

  // Shell
  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck"
  }
}
