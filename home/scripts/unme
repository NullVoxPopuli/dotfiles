#!/bin/bash
#
# Usage:
#    cat /tmp/error.dump.log | unme | setclip
#
input=$(</dev/stdin)

dev="/✂️/"
tilde="🏠/"
user=""
repoPlaceholder="<repo>"
projectPlaceholder="<project>"
pnpmPlaceholder="<.pnpm>"

original_dev="/home/$USER/Development"
mac_original_dev="/home/$USER/Development"

original_tilde="/home/$USER/"
mac_original_tilde="/Users/$USER/"

if git rev-parse --git-dir > /dev/null 2>&1; then
  gitRoot=$(git rev-parse --show-toplevel)
  gitPath=$(echo $PWD | sed "s~$gitRoot~~g")
fi

if [ ! -z "$pnpmPlaceholder" ]; then
  pnpmRoot="$gitRoot/node_modules/.pnpm"
  input="$(echo "$input" | sed "s~$pnpmRoot~$pnpmPlaceholder~g")"
fi

if [ ! -z "$repoPlaceholder" ]; then
  input="$(echo "$input" | sed "s~$gitRoot~$repoPlaceholder~g")"
fi

if [ ! -z "$projectPlaceholder" ]; then
  input="$(echo "$input" | sed "s~$gitRoot~$projectPlaceholder~g")"
fi

function doReplacing() {
  local _dev=$1
  local _home=$2

  echo "$input" \
    | sed "s~$_dev/NullVoxPopuli/~$dev~g" \
    | sed "s~$_dev/OpenSource/~$dev~g" \
    | sed "s~$_dev/Work/~$dev~g" \
    | sed "s~$_dev/tmp/~$dev~g" \
    | sed "s~$_dev/~$dev~g" \
    | sed "s~$_home~$tilde~g"
}


input=$(doReplacing $original_dev $original_tilde)
input=$(doReplacing $mac_original_dev $mac_original_tilde)

echo  "$input"
